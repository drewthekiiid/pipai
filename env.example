# 🔐 PIP AI - Environment Variables Example
# Copy this file to .env and fill in your actual values

# ===== AWS Configuration (for Pulumi Infrastructure) =====
AWS_ACCESS_KEY_ID=your_aws_access_key_id_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key_here
AWS_REGION=us-east-1
AWS_S3_BUCKET_NAME=your-construction-docs-bucket

# ===== Vercel Configuration (for Frontend Deployment) =====
VERCEL_API_TOKEN=your_vercel_api_token_here
VERCEL_ORG_ID=your_vercel_org_id_here
VERCEL_PROJECT_ID=your_vercel_project_id_here

# ===== Pulumi Configuration (for Infrastructure as Code) =====
PULUMI_ACCESS_TOKEN=your_pulumi_access_token_here

# ===== OpenAI Configuration (for Construction AI) =====
OPENAI_API_KEY=sk-your_openai_api_key_here

# ===== Upstash Redis Configuration (for Caching) =====
UPSTASH_REDIS_REST_URL=https://your-redis-instance.upstash.io
UPSTASH_REDIS_REST_TOKEN=your_upstash_redis_token_here

# ===== Temporal Configuration (for Workflow Management) =====
TEMPORAL_ADDRESS=localhost:7233
TEMPORAL_NAMESPACE=default
TEMPORAL_API_KEY=your_temporal_api_key_here
TEMPORAL_TASK_QUEUE=pip-ai-task-queue

# ===== Optional: Development Configuration =====
# NODE_ENV=development
# DEBUG=pip-ai:*

# ===== Instructions =====
# 1. Copy this file: cp env.example .env
# 2. Fill in your actual values (remove the example text)
# 3. Run the automated setup: ./scripts/setup-github-secrets.sh
# 4. Your secrets will be automatically uploaded to GitHub!

# ===== Security Notes =====
# - Never commit your .env file to git
# - The .env file is already in .gitignore
# - Values will be masked when uploaded (only first 4 chars shown)
# - You can verify secrets in GitHub Settings > Secrets and variables > Actions 