#!/bin/bash

# PipAI Dev Container Management Script
# Use this script to manage your PipAI development containers

# Let Dev Containers extension manage project naming automatically
COMPOSE_FILE=".devcontainer/docker-compose.yml"

case "$1" in
    "start"|"up")
        echo "üöÄ Starting PipAI dev containers..."
        docker compose -f $COMPOSE_FILE up -d
        ;;
    "stop"|"down")
        echo "üõë Stopping PipAI dev containers..."
        docker compose -f $COMPOSE_FILE down
        ;;
    "restart")
        echo "üîÑ Restarting PipAI dev containers..."
        docker compose -f $COMPOSE_FILE down
        docker compose -f $COMPOSE_FILE up -d
        ;;
    "status"|"ps")
        echo "üìã PipAI dev containers status:"
        docker compose -f $COMPOSE_FILE ps
        ;;
    "logs")
        if [ -n "$2" ]; then
            echo "üìÑ Logs for $2:"
            docker compose -f $COMPOSE_FILE logs -f $2
        else
            echo "üìÑ All PipAI container logs:"
            docker compose -f $COMPOSE_FILE logs -f
        fi
        ;;
    "shell")
        echo "üêö Opening shell in PipAI dev container..."
        # The container name will be auto-generated by docker compose
        CONTAINER_NAME=$(docker compose -f $COMPOSE_FILE ps -q devcontainer)
        if [ -n "$CONTAINER_NAME" ]; then
            docker exec -it $CONTAINER_NAME bash
        else
            echo "‚ùå Dev container not found. Make sure containers are running."
        fi
        ;;
    "clean")
        echo "üßπ Cleaning up PipAI containers and volumes..."
        docker compose -f $COMPOSE_FILE down -v
        docker system prune -f
        ;;
    *)
        echo "üèóÔ∏è PipAI Dev Container Manager"
        echo ""
        echo "Usage: $0 [command]"
        echo ""
        echo "Commands:"
        echo "  start, up     - Start all PipAI dev containers"
        echo "  stop, down    - Stop all PipAI dev containers"
        echo "  restart       - Restart all PipAI dev containers"
        echo "  status, ps    - Show container status"
        echo "  logs [service]- Show container logs (optionally for specific service)"
        echo "  shell         - Open shell in dev container"
        echo "  clean         - Stop containers and remove volumes"
        echo ""
        echo "Examples:"
        echo "  $0 start"
        echo "  $0 logs postgres"
        echo "  $0 shell"
        ;;
esac 