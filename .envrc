#!/usr/bin/env bash

# =============================================================================
# PIP AI Development Environment Configuration
# =============================================================================
# This file is used by direnv to automatically set up your development
# environment when you enter the project directory.
#
# Setup Instructions:
# 1. Install direnv: https://direnv.net/docs/installation.html
# 2. Run: direnv allow
# 3. Copy .env.example to .env.local and fill in your secrets
# =============================================================================

# Load environment variables from .env.local if it exists
if [[ -f .env.local ]]; then
  dotenv .env.local
  echo "✅ Loaded environment variables from .env.local"
else
  echo "⚠️  .env.local not found. Copy .env.example and fill in your secrets."
fi

# =============================================================================
# Development Environment Setup
# =============================================================================

# Set Node.js version (if using nodenv/nvm)
# export NODE_VERSION="20.15.0"

# Set development mode
export NODE_ENV="development"

# Enable debugging for development
export DEBUG="pip-ai:*"

# =============================================================================
# Application Configuration
# =============================================================================

# Next.js Configuration
export NEXT_TELEMETRY_DISABLED=1
export TURBOPACK_EXPERIMENTAL=1

# Database Configuration (if using local development)
export DATABASE_URL="file:./temporal.db"

# =============================================================================
# Development Tools
# =============================================================================

# Add local node_modules/.bin to PATH for easier CLI tool access
PATH_add node_modules/.bin

# Add pnpm global bin to PATH
if command -v pnpm >/dev/null 2>&1; then
  PATH_add "$(pnpm root -g)/../.bin"
fi

# =============================================================================
# Project-specific aliases and functions
# =============================================================================

# Development server shortcuts
alias dev-start="./dev-start.sh"
alias dev-stop="./dev-stop.sh"
alias dev-clean="rm -rf .next node_modules/.cache packages/*/dist"

# Quick commands
alias install-deps="pnpm install"
alias build-all="pnpm run build"
alias test-all="pnpm run test"

# Git shortcuts for this project
alias git-status="git status"
alias git-push="git add . && git commit -m 'Update' && git push origin main"

# =============================================================================
# Service URLs (for development reference)
# =============================================================================

export FRONTEND_URL="http://localhost:3000"
export API_URL="http://localhost:3000/api"
export UPLOAD_PRESIGNED_URL_ENDPOINT="http://localhost:3000/api/upload/presigned-url"

# =============================================================================
# Development Helpers
# =============================================================================

# Function to check if all required environment variables are set
check_env() {
  local required_vars=(
    "OPENAI_API_KEY"
    "AWS_ACCESS_KEY_ID"
    "AWS_SECRET_ACCESS_KEY"
    "AWS_REGION"
    "S3_BUCKET_NAME"
    "REDIS_URL"
  )
  
  local missing_vars=()
  
  for var in "${required_vars[@]}"; do
    if [[ -z "${!var}" ]]; then
      missing_vars+=("$var")
    fi
  done
  
  if [[ ${#missing_vars[@]} -eq 0 ]]; then
    echo "✅ All required environment variables are set"
  else
    echo "❌ Missing required environment variables:"
    printf "   - %s\n" "${missing_vars[@]}"
    echo "   Please add them to your .env.local file"
  fi
}

# Function to start development environment
dev() {
  echo "🚀 Starting PIP AI Development Environment..."
  check_env
  echo "📝 Available commands:"
  echo "   dev-start  - Start all development servers"
  echo "   dev-stop   - Stop all development servers"
  echo "   dev-clean  - Clean build artifacts and caches"
  echo "   check_env  - Check if all required env vars are set"
}

# =============================================================================
# Auto-setup on directory entry
# =============================================================================

echo "🏗️  PIP AI Development Environment"
echo "   Repository: https://github.com/drewthekiiid/pipai"
echo "   Frontend:   $FRONTEND_URL"
echo "   API:        $API_URL"
echo ""

# Check if pnpm is installed
if ! command -v pnpm >/dev/null 2>&1; then
  echo "⚠️  pnpm not found. Install with: npm install -g pnpm"
fi

# Check if node_modules exists
if [[ ! -d "node_modules" ]]; then
  echo "📦 Dependencies not installed. Run: pnpm install"
fi

# Auto-check environment on entry
check_env 